{
    "editor.fontSize": 15,
    "editor.fontFamily": "Roboto Mono, HarmonyOS Sans SC, Consolas, 'Courier New'",
    "[cpp]": {
        "editor.wordBasedSuggestions": "off",
        "editor.suggest.insertMode": "replace",
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.semanticHighlighting.enabled": true
    },
    "code-runner.saveFileBeforeRun": true,
    "code-runner.saveAllFilesBeforeRun": true,
    "code-runner.runInTerminal": true,
    "workbench.editorAssociations": {
        "*.pdf": "latex-workshop-pdf-hook"
    },
    "clang-format.style": "{ BasedOnStyle: Google, IndentWidth: 4, AccessModifierOffset: -4, IndentWidth: 4, BreakBeforeBraces: Attach}",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "typst-lsp.exportPdf": "never",
    "cmake.configureOnEdit": false,
    "cmake.configureOnOpen": false,
    "errorLens.enabled": false,
    "go.toolsManagement.autoUpdate": true,
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, IndentWidth: 4,  TabWidth: 4, BreakBeforeBraces: Attach, AccessModifierOffset: -4}",
    "[yaml]": {
        "editor.tabSize": 4
    },
    "[dockercompose]": {
        "editor.tabSize": 4
    },
    "xmake.debugConfigType": "codelldb",
    "editor.inlineSuggest.enabled": true,
    "code-runner.executorMap": {


        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "zig": "zig run",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "dotnet run $dirname",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName"
    },
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": false,
        "scminput": false,
        "cpp": true
    },
    "workbench.iconTheme": "material-icon-theme",
    "remote.SSH.remotePlatform": {
        "tencent-ubuntu2204": "linux",
        "tencent-CentOS": "linux",
        "tencent-CloudServer": "linux"
    },
    "notebook.lineNumbers": "on",
    "go.formatTool": "gofmt",
    "[go]":{
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    }
    },
    "terminal.integrated.defaultProfile.linux": "fish",
    "security.allowedUNCHosts": [
        "wsl.localhost"
    ],
    "remote.autoForwardPorts": false,
    "clangd.arguments": [
        "--compile-commands-dir=${workspaceFolder}/build/",
        "--header-insertion=never",
        "--completion-style=detailed"
    ],
    "clangd.fallbackFlags": [
        "-I/${workspaceFolder}/include",
        "-I/${workspaceFolder}/",
        "-I/home/nexisato/DevEnv/qt5/5.14.2/gcc_64/include",
        "-I/${workspaceFolder}/../include/",
        "-std=c++20"
    ],
    "editor.indentSize": "tabSize",
    "[vue]": {
        "editor.defaultFormatter": "Vue.volar"
    },
    "Codegeex.Privacy": true,
    "Codegeex.EnableExtension": false,
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[cuda-cpp]": {
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
    },
    "clang-format.language.cuda.style": "{ BasedOnStyle: Google, IndentWidth: 4, AccessModifierOffset: -4, IndentWidth: 4, BreakBeforeBraces: Attach}",
    "clang-format.language.cpp.style": "{ BasedOnStyle: Google, IndentWidth: 4, AccessModifierOffset: -4, IndentWidth: 4, BreakBeforeBraces: Attach}",
    "cmake.options.statusBarVisibility": "icon",
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "cmake.showOptionsMovedNotification": false,
    "cmake.preferredGenerators": [],
    "cmake.generator": "",
        // 头部注释
    "fileheader.customMade": {
            // 头部注释默认字段
        "Author": "nexisato",
        "Date": "Do not edit", // 设置后默认设置文件生成时间
        "FilePath": "Do not edit", // 设置后，默认生成文件相对于项目的路径
        "Description": "",
        "custom_string_obkoro1": ""
    },
        // 函数注释
        "fileheader.cursorMode": {
            // 默认字段
            "description":"",
            "param":"",
            "return":""
        },
        // 插件配置项
        "fileheader.configObj": {
        
            "autoAdd": false, // 检测文件没有头部注释，自动添加文件头部注释
            "autoAddLine": 100, // 文件超过多少行数 不再自动添加头部注释
            "autoAlready": true, // 只添加插件支持的语言以及用户通过`language`选项自定义的注释
            "supportAutoLanguage": [], // 设置之后，在数组内的文件才支持自动添加
        // 自动添加头部注释黑名单
        "prohibitAutoAdd": [
            "json"
         ],
        "prohibitItemAutoAdd": [ "项目的全称禁止项目自动添加头部注释, 使用快捷键自行添加" ],
        "folderBlacklist": [ "node_modules" ], // 文件夹或文件名禁止自动添加头部注释
        "wideSame": false, // 头部注释等宽设置
        "wideNum": 13,  // 头部注释字段长度 默认为13
            "functionWideNum": 0, // 函数注释等宽设置 设为0 即为关闭
        // 头部注释第几行插入
            "headInsertLine": {
            "php": 2 // php文件 插入到第二行
            },
            "beforeAnnotation": {}, // 头部注释之前插入内容
            "afterAnnotation": {}, // 头部注释之后插入内容
            "specialOptions": {}, // 特殊字段自定义
            "switch": {
            "newlineAddAnnotation": true // 默认遇到换行符(\r\n \n \r)添加注释符号
            },
            "moveCursor": true, // 自动移动光标到Description所在行
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "atSymbol": ["@", "@"], // 更改所有文件的自定义注释中的@符号
            "atSymbolObj": {}, //  更改单独语言/文件的@
            "colon": [": ", ": "], // 更改所有文件的注释冒号
            "colonObj": {}, //  更改单独语言/文件的冒号
            "filePathColon": "路径分隔符替换", // 默认值： mac: / window是: \
            "showErrorMessage": false, // 是否显示插件错误通知 用于debugger
            "writeLog": false, // 错误日志生成
            "CheckFileChange": false, // 单个文件保存时进行diff检查
            "createHeader": false, // 新建文件自动添加头部注释
            "useWorker": false, // 是否使用工作区设置
            "designAddHead": false, // 添加注释图案时添加头部注释
            "headDesignName": "random", // 图案注释使用哪个图案 
            /* 
                'random', // 随机
                'buddhalImg', // 佛祖
                'buddhalImgSay', // 佛祖+佛曰
                'buddhalSay', // 佛曰
                'totemDragon', // 龙图腾
                'belle', // 美女
                'coderSong', // 程序员之歌
                'loitumaGirl', // 甩葱少女
                'keyboardAll', // 全键盘
                'keyboardSmall', // 小键盘
                'totemWestDragon', // 喷火龙
                'jesus', // 耶稣
                'dog', // 狗
                'grassHorse', // 草泥马
                'grassHorse2', // 草泥马2
                'totemBat', // 蝙蝠
            */
            "headDesign": false, // 是否使用图案注释替换头部注释
            // 自定义配置是否在函数内生成注释 不同文件类型和语言类型
            "cursorModeInternalAll": {}, // 默认为false 在函数外生成函数注释
            "openFunctionParamsCheck": true, // 开启关闭自动提取添加函数参数
            "functionParamsShape": ["{", "}"], // 函数参数外形自定义 
            // "functionParamsShape": "no type" 函数参数不需要类型
            "functionBlankSpaceAll": {}, // 函数注释空格缩进 默认为空对象 默认值为0 不缩进
            "functionTypeSymbol": "*", // 参数没有类型时的默认值
            "typeParamOrder": "type param", // 参数类型 和 参数的位置自定义
            // 自定义语言注释，自定义取消 head、end 部分
            // 不设置自定义配置language无效 默认都有head、end
            "customHasHeadEnd": {}, // "cancel head and function" | "cancel head" | "cancel function" 
            "throttleTime": 60000, // 对同一个文件 需要过1分钟再次修改文件并保存才会更新注释
            // 自定义语言注释符号，覆盖插件的注释格式
            "language": {
                // js后缀文件
                "js": {
                    "head": "/$$",
                    "middle": " $ @",
                    "end": " $/",
                    // 函数自定义注释符号：如果有此配置 会默认使用
                    "functionSymbol": {
                    "head": "/******* ", // 统一增加几个*号
                    "middle": " * @",
                    "end": " */"
                    },
                    "functionParams": "typescript" // 函数注释使用ts语言的解析逻辑
                },
            // 一次匹配多种文件后缀文件 不用重复设置
            "h/hpp/cpp": {
                "head": "/*** ", // 统一增加几个*号
                "middle": " * @",
                "end": " */"
                },
                // 针对有特殊要求的文件如：test.blade.php
                "blade.php":{
                "head": "<!--",
                "middle": " * @",
                "end": "-->",
                }
            },
        // 默认注释  没有匹配到注释符号的时候使用。
        "annotationStr": { 
            "head": "/*",
            "middle": " * @",
            "end": " */",
            "use": false
            },
        },
        "files.associations": {
            "adc.h": "c"
        },
        "gitlens.graph.minimap.enabled": false,
        "fittencode.inlineCompletion.enable": true,
        "[json]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "Lingma.LocalStoragePath": "C:\\Users\\niush\\.lingma",
        "github.copilot.editor.enableAutoCompletions": true,
        "java.configuration.maven.globalSettings": "D:\\DevEnv\\mavenConfig\\apache-maven-3.9.6\\conf\\settings.xml",
        "maven.executable.path": "‪D:\\DevEnv\\mavenConfig\\apache-maven-3.9.6\\bin",
        "[java]": {
            "editor.defaultFormatter": "redhat.java"
        },
        "[python]": {
            "editor.defaultFormatter": "ms-python.black-formatter"
        },
        "C_Cpp.default.cppStandard": "c++20",
        "clangd.detectExtensionConflicts": false
            
    
     
}